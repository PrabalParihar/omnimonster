/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MinimalForwarder,
  MinimalForwarderInterface,
} from "../../contracts/MinimalForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604080518082018252601081526f26b4b734b6b0b62337b93bb0b93232b960811b60208083019190915282518084019093526005835264302e302e3160d81b90830152906200006482600062000112565b610120526200007581600162000112565b61014052815160208084019190912060e052815190820120610100524660a0526200010360e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05262000380565b600060208351101562000132576200012a836200014b565b905062000145565b816200013f84826200023e565b5060ff90505b92915050565b600080829050601f8151111562000182578260405163305a27a960e01b81526004016200017991906200030a565b60405180910390fd5b80516200018f826200035b565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001c257607f821691505b602082108103620001e357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000239576000816000526020600020601f850160051c81016020861015620002145750805b601f850160051c820191505b81811015620002355782815560010162000220565b5050505b505050565b81516001600160401b038111156200025a576200025a62000197565b62000272816200026b8454620001ad565b84620001e9565b602080601f831160018114620002aa5760008415620002915750858301515b600019600386901b1c1916600185901b17855562000235565b600085815260208120601f198616915b82811015620002db57888601518255948401946001909101908401620002ba565b5085821015620002fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b818110156200033a578581018301518582016040015282016200031c565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620001e35760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610dad620003db600039600061056c0152600061053a015260006107740152600061074c015260006106a7015260006106d1015260006106fb0152610dad6000f3fe60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f821461008d57806384b0196e146100ae578063bf5d3bdb146100d6575b600080fd5b34801561005057600080fd5b5061007a61005f366004610a05565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b6100a061009b366004610a35565b610106565b604051610084929190610b24565b3480156100ba57600080fd5b506100c361036e565b6040516100849796959493929190610b47565b3480156100e257600080fd5b506100f66100f1366004610a35565b6103b4565b6040519015158152602001610084565b600060606101158585856103b4565b6101815760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61019060808601356001610be0565b600260006101a16020890189610a05565b6001600160a01b031681526020808201929092526040016000908120929092556101cd90870187610a05565b6101dd6040880160208901610a05565b6040880135606089013560808a01356101f960a08c018c610c01565b60405160200161020f9796959493929190610c4f565b60405160208183030381529060405280519060200120905060008087602001602081019061023d9190610a05565b6001600160a01b0316606089013560408a013561025d60a08c018c610c01565b61026a60208e018e610a05565b60405160200161027c93929190610cb3565b60408051601f198184030181529082905261029691610cd9565b600060405180830381858888f193505050503d80600081146102d4576040519150601f19603f3d011682016040523d82523d6000602084013e6102d9565b606091505b5090925090506102ee603f60608a0135610cf5565b5a116102f657fe5b8261030760408a0160208b01610a05565b6001600160a01b031661031d60208b018b610a05565b6001600160a01b03167f553230d175b18b1e24f8f4f7ec7924d532fa5023e5655af911445623d709e81485604051610359911515815260200190565b60405180910390a49097909650945050505050565b600060608060008060006060610382610533565b61038a610565565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6000806104c784848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104c192507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610424905060208a018a610a05565b61043460408b0160208c01610a05565b60408b013560608c013560808d013561045060a08f018f610c01565b60405161045e929190610d17565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e08101919091526101000160405160208183030381529060405280519060200120610592565b906105c5565b90506080850135600260006104df6020890189610a05565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561052a57506105156020860186610a05565b6001600160a01b0316816001600160a01b0316145b95945050505050565b60606105607f000000000000000000000000000000000000000000000000000000000000000060006105ef565b905090565b60606105607f000000000000000000000000000000000000000000000000000000000000000060016105ef565b60006105bf61059f61069a565b8360405161190160f01b8152600281019290925260228201526042902090565b92915050565b6000806000806105d586866107c5565b9250925092506105e58282610812565b5090949350505050565b606060ff831461060957610602836108cf565b90506105bf565b81805461061590610d27565b80601f016020809104026020016040519081016040528092919081815260200182805461064190610d27565b801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b505050505090506105bf565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156106f357507f000000000000000000000000000000000000000000000000000000000000000046145b1561071d57507f000000000000000000000000000000000000000000000000000000000000000090565b610560604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080600083516041036107ff5760208401516040850151606086015160001a6107f18882858561090e565b95509550955050505061080b565b50508151600091506002905b9250925092565b600082600381111561082657610826610d61565b0361082f575050565b600182600381111561084357610843610d61565b036108615760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561087557610875610d61565b036108965760405163fce698f760e01b815260048101829052602401610178565b60038260038111156108aa576108aa610d61565b036108cb576040516335e2f38360e21b815260048101829052602401610178565b5050565b606060006108dc836109dd565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561094957506000915060039050826109d3565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561099d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166109c9575060009250600191508290506109d3565b9250600091508190505b9450945094915050565b600060ff8216601f8111156105bf57604051632cd44ac360e21b815260040160405180910390fd5b600060208284031215610a1757600080fd5b81356001600160a01b0381168114610a2e57600080fd5b9392505050565b600080600060408486031215610a4a57600080fd5b833567ffffffffffffffff80821115610a6257600080fd5b9085019060c08288031215610a7657600080fd5b90935060208501359080821115610a8c57600080fd5b818601915086601f830112610aa057600080fd5b813581811115610aaf57600080fd5b876020828501011115610ac157600080fd5b6020830194508093505050509250925092565b60005b83811015610aef578181015183820152602001610ad7565b50506000910152565b60008151808452610b10816020860160208601610ad4565b601f01601f19169290920160200192915050565b8215158152604060208201526000610b3f6040830184610af8565b949350505050565b60ff60f81b881681526000602060e06020840152610b6860e084018a610af8565b8381036040850152610b7a818a610af8565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610bce57835183529284019291840191600101610bb2565b50909c9b505050505050505050505050565b808201808211156105bf57634e487b7160e01b600052601160045260246000fd5b6000808335601e19843603018112610c1857600080fd5b83018035915067ffffffffffffffff821115610c3357600080fd5b602001915036819003821315610c4857600080fd5b9250929050565b6001600160a01b0388811682528716602082015260408101869052606081018590526080810184905260c060a0820181905281018290526000828460e0840137600060e0848401015260e0601f19601f850116830101905098975050505050505050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610ceb818460208701610ad4565b9190910192915050565b600082610d1257634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b600181811c90821680610d3b57607f821691505b602082108103610d5b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d7541c3469fe37447f1cc578d5868b98faf2461e56ffedcf0e6d3f3f3b5e5dc964736f6c63430008180033";

type MinimalForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalForwarder__factory extends ContractFactory {
  constructor(...args: MinimalForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MinimalForwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MinimalForwarder__factory {
    return super.connect(runner) as MinimalForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderInterface {
    return new Interface(_abi) as MinimalForwarderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MinimalForwarder {
    return new Contract(address, _abi, runner) as unknown as MinimalForwarder;
  }
}
