/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SwapSageHTLCForwarder,
  SwapSageHTLCForwarderInterface,
} from "../../contracts/SwapSageHTLCForwarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_htlc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "preimage",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "MetaTransactionClaim",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canMetaClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canMetaRefund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "preimage",
        type: "bytes32",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
    ],
    name: "getDetails",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "originator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hashLock",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timelock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum FusionHTLC.SwapState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "htlc",
    outputs: [
      {
        internalType: "contract FusionHTLC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
    ],
    name: "isClaimable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
    ],
    name: "isRefundable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b4a380380610b4a83398101604081905261002f91610141565b6001600160a01b0380821660805282166100a45760405162461bcd60e51b815260206004820152602b60248201527f537761705361676548544c43466f727761726465723a20696e76616c6964204860448201526a544c43206164647265737360a81b60648201526084015b60405180910390fd5b6001600160a01b0381166101135760405162461bcd60e51b815260206004820152603060248201527f537761705361676548544c43466f727761726465723a20696e76616c6964206660448201526f6f72776172646572206164647265737360801b606482015260840161009b565b506001600160a01b031660a052610174565b80516001600160a01b038116811461013c57600080fd5b919050565b6000806040838503121561015457600080fd5b61015d83610125565b915061016b60208401610125565b90509250929050565b60805160a0516109726101d8600039600081816101d10152818161020b015281816102e7015281816103c10152818161044b015281816104dc015281816105a701526106640152600081816101010152818161014801526106bc01526109726000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637da0a877116100665780637da0a8771461014657806384cc9dfb14610180578063984bc70014610193578063d0f761c0146101b9578063e4b23d0c146101cc57600080fd5b806318686e4d146100a35780632eecd456146100cb578063455f468f146100de578063572b6c05146100f15780637249fbb614610131575b600080fd5b6100b66100b136600461072e565b6101f3565b60405190151581526020015b60405180910390f35b6100b66100d936600461072e565b6102cf565b6100b66100ec36600461075e565b6103a8565b6100b66100ff366004610777565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61014461013f36600461075e565b610435565b005b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100c2565b61014461018e36600461079b565b6104b2565b6101a66101a136600461075e565b61059a565b6040516100c297969594939291906107d3565b6100b66101c736600461075e565b61064b565b6101687f000000000000000000000000000000000000000000000000000000000000000081565b60405162984bc760e81b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063984bc7009060240160e060405180830381865afa925050508015610276575060408051601f3d908101601f1916820190925261027391810190610838565b60015b610282575060006102c9565b6001816003811115610296576102966107bd565b1480156102b45750886001600160a01b0316866001600160a01b0316145b80156102bf57508242105b9750505050505050505b92915050565b60405162984bc760e81b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063984bc7009060240160e060405180830381865afa925050508015610352575060408051601f3d908101601f1916820190925261034f91810190610838565b60015b61035e575060006102c9565b6001816003811115610372576103726107bd565b1480156103905750886001600160a01b0316856001600160a01b0316145b80156102bf5750505042101594506102c99350505050565b60405163455f468f60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063455f468f906024015b602060405180830381865afa158015610411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c991906108bb565b604051633924fddb60e11b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637249fbb690602401600060405180830381600087803b15801561049757600080fd5b505af11580156104ab573d6000803e3d6000fd5b5050505050565b60006104bc61069b565b6040516384cc9dfb60e01b815260048101859052602481018490529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906384cc9dfb90604401600060405180830381600087803b15801561052857600080fd5b505af115801561053c573d6000803e3d6000fd5b50505050806001600160a01b0316837fb18c6fd4a191bfac0947e7a75339f9b03c81797bd7fcef9bed0e5c55a4698c1a8461057561069b565b604080519283526001600160a01b0390911660208301520160405180910390a3505050565b60008060008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663984bc700896040518263ffffffff1660e01b81526004016105f391815260200190565b60e060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190610838565b959e949d50929b5090995097509550909350915050565b604051630343dd8760e61b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d0f761c0906024016103f4565b60006106a56106aa565b905090565b60003660148082108015906106e757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633145b1561070e576106fb368284038160006108dd565b61070491610907565b60601c9250505090565b339250505090565b6001600160a01b038116811461072b57600080fd5b50565b6000806040838503121561074157600080fd5b82359150602083013561075381610716565b809150509250929050565b60006020828403121561077057600080fd5b5035919050565b60006020828403121561078957600080fd5b813561079481610716565b9392505050565b600080604083850312156107ae57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038881168252878116602083015286166040820152606081018590526080810184905260a0810183905260e081016004831061082657634e487b7160e01b600052602160045260246000fd5b8260c083015298975050505050505050565b600080600080600080600060e0888a03121561085357600080fd5b875161085e81610716565b602089015190975061086f81610716565b604089015190965061088081610716565b80955050606088015193506080880151925060a0880151915060c0880151600481106108ab57600080fd5b8091505092959891949750929550565b6000602082840312156108cd57600080fd5b8151801515811461079457600080fd5b600080858511156108ed57600080fd5b838611156108fa57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156109345780818660140360031b1b83161692505b50509291505056fea2646970667358221220511e657b4d337aa3495dbce3583615bb3c7675d80cdcd9e7010ff494c6d70c3764736f6c63430008140033";

type SwapSageHTLCForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapSageHTLCForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapSageHTLCForwarder__factory extends ContractFactory {
  constructor(...args: SwapSageHTLCForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _htlc: AddressLike,
    _trustedForwarder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _htlc,
      _trustedForwarder,
      overrides || {}
    );
  }
  override deploy(
    _htlc: AddressLike,
    _trustedForwarder: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_htlc, _trustedForwarder, overrides || {}) as Promise<
      SwapSageHTLCForwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SwapSageHTLCForwarder__factory {
    return super.connect(runner) as SwapSageHTLCForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapSageHTLCForwarderInterface {
    return new Interface(_abi) as SwapSageHTLCForwarderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapSageHTLCForwarder {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SwapSageHTLCForwarder;
  }
}
