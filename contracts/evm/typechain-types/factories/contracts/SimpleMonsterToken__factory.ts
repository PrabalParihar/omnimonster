/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleMonsterToken,
  SimpleMonsterTokenInterface,
} from "../../contracts/SimpleMonsterToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff191660121790553480156200001e57600080fd5b5060405162000b3838038062000b3883398101604081905262000041916200013e565b60006200004f838262000237565b5060016200005e828262000237565b5050600480546001600160a01b031916331790555062000303565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000a157600080fd5b81516001600160401b0380821115620000be57620000be62000079565b604051601f8301601f19908116603f01168101908282118183101715620000e957620000e962000079565b816040528381526020925086838588010111156200010657600080fd5b600091505b838210156200012a57858201830151818301840152908201906200010b565b600093810190920192909252949350505050565b600080604083850312156200015257600080fd5b82516001600160401b03808211156200016a57600080fd5b62000178868387016200008f565b935060208501519150808211156200018f57600080fd5b506200019e858286016200008f565b9150509250929050565b600181811c90821680620001bd57607f821691505b602082108103620001de57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023257600081815260208120601f850160051c810160208610156200020d5750805b601f850160051c820191505b818110156200022e5782815560010162000219565b5050505b505050565b81516001600160401b0381111562000253576200025362000079565b6200026b81620002648454620001a8565b84620001e4565b602080601f831160018114620002a357600084156200028a5750858301515b600019600386901b1c1916600185901b1785556200022e565b600085815260208120601f198616915b82811015620002d457888601518255948401946001909101908401620002b3565b5085821015620002f35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61082580620003136000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461013857806370a082311461014d5780638da5cb5b1461016d57806395d89b4114610198578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610106578063313ce56714610119575b600080fd5b6100b66101de565b6040516100c39190610654565b60405180910390f35b6100df6100da3660046106be565b61026c565b60405190151581526020016100c3565b6100f860035481565b6040519081526020016100c3565b6100df6101143660046106e8565b6102d9565b6002546101269060ff1681565b60405160ff90911681526020016100c3565b61014b6101463660046106be565b610494565b005b6100f861015b366004610724565b60056020526000908152604090205481565b600454610180906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b6100b6610563565b6100df6101ae3660046106be565b610570565b6100f86101c1366004610746565b600660209081526000928352604080842090915290825290205481565b600080546101eb90610779565b80601f016020809104026020016040519081016040528092919081815260200182805461021790610779565b80156102645780601f1061023957610100808354040283529160200191610264565b820191906000526020600020905b81548152906001019060200180831161024757829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102c79086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526005602052604081205482111561033d5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b6001600160a01b03841660009081526006602090815260408083203384529091529020548211156103a95760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610334565b6001600160a01b038416600090815260056020526040812080548492906103d19084906107c9565b90915550506001600160a01b038316600090815260056020526040812080548492906103fe9084906107dc565b90915550506001600160a01b0384166000908152600660209081526040808320338452909152812080548492906104369084906107c9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161048291815260200190565b60405180910390a35060019392505050565b6004546001600160a01b031633146104da5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b6044820152606401610334565b80600360008282546104ec91906107dc565b90915550506001600160a01b038216600090815260056020526040812080548392906105199084906107dc565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600180546101eb90610779565b336000908152600560205260408120548211156105c65760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610334565b33600090815260056020526040812080548492906105e59084906107c9565b90915550506001600160a01b038316600090815260056020526040812080548492906106129084906107dc565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102c7565b600060208083528351808285015260005b8181101561068157858101830151858201604001528201610665565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106b957600080fd5b919050565b600080604083850312156106d157600080fd5b6106da836106a2565b946020939093013593505050565b6000806000606084860312156106fd57600080fd5b610706846106a2565b9250610714602085016106a2565b9150604084013590509250925092565b60006020828403121561073657600080fd5b61073f826106a2565b9392505050565b6000806040838503121561075957600080fd5b610762836106a2565b9150610770602084016106a2565b90509250929050565b600181811c9082168061078d57607f821691505b6020821081036107ad57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102d3576102d36107b3565b808201808211156102d3576102d36107b356fea2646970667358221220ac7485cf37d446d62522153fc68d5507a46c3390fdf5b882f9b8e15548b2541064736f6c63430008140033";

type SimpleMonsterTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleMonsterTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleMonsterToken__factory extends ContractFactory {
  constructor(...args: SimpleMonsterTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<
      SimpleMonsterToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleMonsterToken__factory {
    return super.connect(runner) as SimpleMonsterToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleMonsterTokenInterface {
    return new Interface(_abi) as SimpleMonsterTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleMonsterToken {
    return new Contract(address, _abi, runner) as unknown as SimpleMonsterToken;
  }
}
